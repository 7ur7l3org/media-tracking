thanks https://chatgpt.com/c/679d3064-16b0-800c-9e35-89509164697b (trying o3-mini)
thanks https://chatgpt.com/c/679d8f5e-ad78-800c-ac21-cba9c0ffbd01 (o3-mini is good!)
thanks https://chatgpt.com/c/67d26a50-554c-800c-87ae-b8cb1d2f8cce
thanks https://chatgpt.com/c/67d7c151-3f90-800c-9811-cf45a2920d74 (cloudflare workers cors proxy deployment to https://ueue-cors-proxy.7ur.workers.dev)
thanks https://chatgpt.com/c/67e1015d-38c4-800c-9eaf-ac5ea8796807 (cloudflare pages site deployment to https://ueue.pages.dev/)

can use something like https://ueue.7ur.it/?id=Q5884621 for unknown uncategorized everything
can enter note saying ep3 for stuff that doesn't have episodes yet

phase 1
- sync on visible, fix width/wrapping, content notes, edits, queue ordering and filtering
- fix visiting content not pushing the commit leading to almost inevitable diverge on refresh (also doesn't make any sense indexeddb changing in the background but the commit living... somewhere??? well maybe the diverge is purely from two devices which is fair)
- make wikidata cache live forever until manual refresh (if success cause internet). few things aren't well in the past
- fix queues and consumptions pages (queues?queue=books doesn't only load books. consumptions seems to work. both are missing notes and number of votes and probably sorting)
- add edit buttons to notes and timestamps for queue votes and consumptions
- make queues page allow reordering queues for the add new queue vote ui, and deleting queues (and optionally purging all queue votes of that deleted queue from all media)
- make external non-qid id pages for failed searches or uri's that should still function fine as id's for consumption/queue ui, probably just button on search failure and automatic if search failure and no hits
- make proper pwa that works offline with indexeddb storage
- make the ui not flicker - merge the new dom into the old dom directly updating contents and only inserting/deleting elements when necessary
- make consumptions and queue votes show loading/progress in the new entry as it is syncing to github
- make notes ui per id
- dark mode by system default and toggle in corner (https://chatgpt.com/c/67e24631-3cb4-800c-8c74-b2cffff5cb09 js in head to set theme from user toggle localStorage else os preference, use variables for everything, no themes)
- fix login button to always prompt to update/add username/password if changed somehow in chrome password manager
- ensure repo caches are wiped on logout and login -> orrr just the tokens so you can "login" to different offline repos? or maybe ux for "local repos" where you can wipe them if you want idk. like if you log out and then you see all the local repos you could log into without the pat or you could wipe them cause you see that they're there. that sounds like the best
- make series/sequencing show top level consumed and queue votes for e.g. House in the Part of the series line just like e.g. season 5 does
- integrate wikidata images or wikipedia or mpdb or tmdb images or fanart or otherwise to get images on content
- add ` Read access to metadata; Read and Write access to code and pull requests` to list of what the token should have in login section
- put meta title/description in commit messages
- make cache series/sequencing for all elements of the series if it doesn't already
- make title/description include type of tags like the search shows
- make search work offline to search through all the things you've ever visited
- make adding consumption default to removing from watchlist probably? tho that might just be nice to do from its own page later idk
- visiting a page for the first time commits the title/description to the repo, but only locally. it doesn't trigger a sync. then when you refresh and visit it for the first time you get a "auto-commit pre-sync" on initial sync because the local repo is ahead. the local repo should never be ahead because all commits should be "then sync" triggering actions
- the edit of votes should be able to switch which queue an entry is on directly
- when logged out i get `pushOrDivergeAndPush: Error: Please log in with your GitHub token first.` red at the top, but not in the sync status where it should clearly show "local only". the logs are `[11:04:20 PM mistress fe363a1] syncing repo  [11:04:20 PM mistress fe363a1] no changes to commit  [11:04:20 PM mistress fe363a1] cloneOrFetchUpdates: Error: Please log in with your GitHub token first.  [11:04:20 PM mistress fe363a1] pushOrDivergeAndPush: Error: Please log in with your GitHub token first.`. in fact when logged out and on the home page it's only a single yellow warning saying "syncing repo" since i guess the local repo wasn't even initialized yet (it becomes the same red once you visit any content page)
- logging in doesn't trigger a sync until refresh
- make it way easier to share login password/username between devices/sites, copy pasting the token and cors proxy separately and # appending them is dumb. should probably just show username and password directly possibly idk
- make slow generic "loading..." actually incrementally load or something or at least show clearly what it's loading (e.g. main part first then series/sequencing is loading)
- cache series/sequencing information in the ueue-media-tracking.json directly (similarly to caching visited content) with just ui to refresh/reload the series/sequencing information for a piece of content. probably this would be in .meta.series where all the root series are placed there. should make the wikidata cache less important too which is good
- "http is not defined" is what flashes red in the background of the sync status. i think when that happens the sync actually did completely fail but for some reason the site thinks it worked.. eventually refreshing enough it starts taking a second to actually fetch. maybe it takes a bit for the cloudflare worker to kick on? it should be very unhappy in that state.. i think the scripts aren't always loading in the right order with the right dependencies or something
    - ooh i think i caught it: `pushOrDivergeAndPush: Error pushing changes: http is not defined` for `[11:59:57 PM mistress 40c1ffa] syncing repo  [11:59:57 PM mistress 40c1ffa] no changes to commit  [11:59:57 PM mistress 40c1ffa] local repo exists – fetching updates...  [11:59:57 PM mistress 40c1ffa] cloning repo...  [11:59:57 PM mistress 40c1ffa] cloneOrFetchUpdates: Error cloning repo: http is not defined  [11:59:57 PM mistress 40c1ffa] comparing local HEAD (40c1ffa) to fetched origin/mistress (eeb2b11)  [11:59:57 PM mistress 40c1ffa] local HEAD (40c1ffa) has extra commits  [11:59:57 PM mistress 40c1ffa] pushing changes to GitHub...  [11:59:57 PM mistress 40c1ffa] pushOrDivergeAndPush: Error pushing changes: http is not defined.` i added a queue vote, visited the queues page, and then went back to the main page (not any content). oh and refreshing a bunch eventually put me on a diverged branch. cool. `[12:01:22 AM mistress 40c1ffa] syncing repo  [12:01:22 AM mistress 40c1ffa] no changes to commit  [12:01:22 AM mistress 40c1ffa] local repo exists – fetching updates...  [12:01:22 AM mistress 40c1ffa] repo fetched successfully  [12:01:22 AM mistress 40c1ffa] local HEAD (40c1ffa) has extra commits  [12:01:22 AM mistress 40c1ffa] comparing local HEAD (40c1ffa) to fetched origin/mistress (36689c1)  [12:01:22 AM mistress 40c1ffa] local HEAD (40c1ffa) has extra commits  [12:01:22 AM mistress 40c1ffa] pushing changes to GitHub...  [12:01:23 AM mistress 40c1ffa] pushOrDivergeAndPush: Push rejected due to non-fast-forward. Creating session branch...  [12:01:23 AM mistress 40c1ffa] pushOrDivergeAndPush: Creating and switching to branch: mistress-session-1743055283476  [12:01:23 AM mistress-session-1743055283476 40c1ffa] pushOrDivergeAndPush: Switched to branch: mistress-session-1743055283476  [12:01:24 AM mistress-session-1743055283476 40c1ffa] pushOrDivergeAndPush: Sync complete: diverged changes are now pushed to branch mistress-session-1743055283476.  [12:01:24 AM mistress-session-1743055283476 40c1ffa] Creating PR for branch mistress-session-1743055283476...  [12:01:24 AM mistress-session-1743055283476 40c1ffa] Creating PR for branch mistress-session-1743055283476...  [12:01:25 AM mistress-session-1743055283476 40c1ffa] PR already exists for branch mistress-session-1743055283476. Trying again to retrieve it.  [12:01:25 AM mistress-session-1743055283476 40c1ffa] PR created for branch mistress-session-1743055283476.`. i don't understand why the push would reject though. somehow it becomes 2 commits ahead 10 commits behind mistress just from adding a new queue and then adding a queue vote. it's like i was on an old page that was still open and it didn't sync until after the ui operation. hmm. i wonder if there's a way to make it sync on "page is visible". probably tbh. pretty painless overall to un-diverge. just.. probably unnecessary if it could auto-merge? should probably keep it though to make that not happen as much as possible, and then remove it if it is unavoidable in some cases
- make it sync on "page is visible"
- pat doesn't wrap on a phone (and is wider than the phone screen) causing the whole page to be too wide (zooming out one actually fixes it, but i should make it wrap or overflow into the void or something..)
- do debounced sync on visibility and focus changes https://chatgpt.com/c/67e58cec-bb98-800c-829a-9d513192634e
- pwa offline and background sync https://developer.mozilla.org/en-US/docs/Web/Progressive_web_apps/Guides/Offline_and_background_operation , https://developer.mozilla.org/en-US/docs/Web/API/Web_Periodic_Background_Synchronization_API
- verify two tabs syncing at the same time cant fuck anything up (e.g. do i have to lock the indexeddb git operations)
- make tooltip and click expand in series/sequencing show note
- make add consumption ui (with note) to series/sequencing view so you can mark the handful that you just watched all watched at once
- add description to page title in addition to title and qid. `Title (Description) - ueueYOU (Qid)` maybe
- move series/sequencing "follows" and "followed by" at the top by the title
- add link to main ueue that goes to main ueue page
- fr fucking make consumptions/votes and wikidata and series/sequencing all load separately from each other. shit's so slow
- public queues? additional auth to public repos? multi auth in general? /public-repo? or something? esp for sharing your own progress or giving someone a link to check where we're at if they're watching with you
- pre fetch content for followed by in the background
- name diverged branches better
- move all zip tools gpt bullshit into scratch-prototyping/dont-use-4o lol
- make theme better
- make theme changing ux to call setTheme light or dark or nothing to be sustem preference
- make cloudflare-deploy branch to merge mistress into so i dont abuse their autobuilds unnecessarily

phase 2
- fetching 
https://cors-proxy.m7ur7l3.workers.dev/github.com/7ur7l3org/tracking-repo/info/refs?service=git-upload-pack always gets a 401 and then a 204 options preflight and then a 200. possibly this code is bad making the 401 request idk
- "load by token write access" is returning a lot of "disk cache" responses. i feel like clicking the button should hard refresh the responses esp if they've changed something on github's end
- make it not slow
- refactor to reduce the number of lines in each file to be easier to edit with ai
- update trakt converter, re-export trakt, and fully migrate
- make wikidata updater ui for external id's that previews the batch update thing and then links to it to run from there
- make import/export repo to disk (manual for now, eventually sync to disk that syncs tar of indexeddb repo to disk (nondestructively?), but currently it's way too slow to fs directly and the access popups kinda suck -> or am i just not using the good browserfs..)
    - https://github.com/isomorphic-git/isomorphic-git/blob/main/docs/fs.md#browserfs Besides IndexedDB, BrowserFS supports many different backends with different performance characteristics (some backends support sync operations, some only async), as well as different features such as proxying a static file server as a read-only file system, mounting ZIP files as file systems, or overlaying a writeable in-memory filesystem on top of a read-only filesystem. You don't need to know all these features, but familiarizing yourself with the different options may be necessary if you hit a storage limit or performance bottleneck in the IndexedDB backend I suggested above.
- add verbose trace debug logging (that normally are filtered out of console)
- allow adding/removing consumption or queue vote from series/sequencing information view
- make pr's that don't actually have any conflict auto-merge and branch clean up. long term tho. concurrent equivalent updates should be rare
- make it so that merely visiting a thing doesn't auto-commit it to the repo probably. renderEntity probably just shouldn't ensureMediaEntry/saveBackendData. ensureMediaEntry should probably automatically saveBackendData if it changes
- make /raw or something to view the raw json
- make one click cloudflare worker button not trash
- probably change default cors proxy to https://ueue-cors-proxy.7ur.workers.dev/ linking to source and noting why https://cors.isomorphic-git.org/ doesn't work
- can easily add friends and view other people's queues and watchlists without logging out by sharing and saving to meta read-only pat's! probably via url ?repo=blah&pat= that disables sync and puts you in read only mode for their stuff! should also maybe once per page load fetch all those friends' repos too so they're always kept updated for offline
- update updateGitSyncStatus to not be based on a hardcoded colour string but based on the css class list directly (or something)

---

done
-- dark theme
-- fix that automatic sync is broken on ueue.7ur.it but works fine on ueue.pages.dev -> aha 7ur.it is loading rocket-loader.min.js and pages.dev isn't. disabled it cause i couldn't get it to even load the script that maybe fixed it
-- find and spin up working cors proxy and make one click button for users to spin up their own personal one. for now running python script on localhost:8088 -> https://dash.cloudflare.com/d3f974b3287fb000e629aafe6423b481/workers/services/view/ueue-cors-proxy/production/deployments = https://ueue-cors-proxy.7ur.workers.dev/ = https://github.com/7ur7l3org/cors-proxy . one click button is trash
-- put on github pages -> put on cloudflare pages! https://dash.cloudflare.com/d3f974b3287fb000e629aafe6423b481/pages/view/ueue = https://ueue.7ur.it/
